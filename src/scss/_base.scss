:root {
     --data-color: #bd371f;
     --data-secondary:#fbb530;
     --backgorund-item: #e8eef2;   
     --data--warning: #dc5151;
     --text-primary: #404751;
     --shadow-btn: hsla(97, 45%, 55%, 50%);
     --color-default: #e1e1e1;
   }
   
   $color-base: var(--data-color);
   $color-warning:var(--data--warning);
   $color-warning: var(--warning);
   $color-background:var(--backgorund-item);
   $color-secondary: var(--data-secondary);
   $text-primary: var(--text-primary);
   $text-default: var(--color-default);


   
   //***** box-shadow
   $enable-shadows: false !default;
   $shadow-base: 0 4px 40px rgba(182, 185, 255, 0.32) !default;
   @mixin box-shadow($shadow...) {
     @if length($shadow) ==0 {
       -webkit-box-shadow: $shadow-base;
       -moz-box-shadow: $shadow-base;
       box-shadow: $shadow-base;
     } @else {
       -webkit-box-shadow: $shadow;
       -moz-box-shadow: $shadow;
       box-shadow: $shadow;
     }
   }
   
   //***** text style
   @mixin text-style($size, $weight, $color) {
     font-size: $size;
     font-weight: $weight;
     color: $color;
   }

 
   
   //***** border-radius
   $enable-rounded: true !default;
   $radius-base: 15px !default;
   @mixin border-radius($radius...) {
     @if length($radius) ==0 {
       -webkit-border-radius: $radius-base;
       -moz-border-radius: $radius-base;
       border-radius: $radius-base;
     } @else {
       -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
       border-radius: $radius;
     }
   }
   
   //***** rotate
   $enable-rotates: true !default;
   $rotate-base: rotate(20deg) !default;
   @mixin rotate($degree) {
     @if $enable-rotates {
       @if length($degree) ==0 {
         -webkit-transform: $rotate-base;
         -moz-transform: $rotate-base;
         -ms-transform: $rotate-base;
         -o-transform: $rotate-base;
         transform: $rotate-base;
       } @else {
         -webkit-transform: rotate($degree);
         -moz-transform: rotate($degree);
         -ms-transform: rotate($degree);
         -o-transform: rotate($degree);
         transform: rotate($degree);
       }
     }
   }
   
   //***** scale
   $enable-scales: true !default;
   $scale-base: scale(1.1) !default;
   @mixin scale($scale) {
     @if $enable-scales {
       @if length($scale) ==0 {
         -webkit-transform: $scale-base;
         -moz-transform: $scale-base;
         -ms-transform: $scale-base;
         -o-transform: $scale-base;
         transform: $scale-base;
       } @else {
         -webkit-transform: scale($scale);
         -moz-transform: scale($scale);
         -ms-transform: scale($scale);
         -o-transform: scale($scale);
         transform: scale($scale);
       }
     }
   }
   $transition-bases: all 500s ease-in-out !default;
   //***** transition
   $enable-transitions: true !default;
   $transition-base: all 700s ease-in-out !default;
   @mixin transition($transition...) {
     @if $enable-transitions {
       @if length($transition) ==0 {
         -webkit-transition: $transition-base;
         -moz-transition: $transition-base;
         -ms-transition: $transition-base;
         -o-transition: $transition-base;
         transition: $transition-base;
       } @else {
         -webkit-transition: $transition;
         -moz-transition: $transition;
         -ms-transition: $transition;
         -o-transition: $transition;
         transition: $transition;
       }
     }
   }
   
   //***** truncate
   @mixin linetext($clamp) {
     -webkit-box-orient: vertical;
     display: -webkit-box;
     -webkit-line-clamp: $clamp;
     overflow: hidden;
     /* autoprefixer: off */
   }
   
   //***** button
   // @include button-size(15px,5px,13px,1.9,3px)
   @mixin button-size(
     $padding-y,
     $padding-x,
     $font-size,
     $line-height,
     $border-radius,
     $color-btn,
     $background
   ) {
     padding: $padding-y $padding-x;
     font-size: $font-size;
     line-height: $line-height;
     color: $color-btn;
     background-color: $background;
    //  border: 1px solid $color-base;
    //  margin: 0 auto;
     // Manually declare to provide an override to the browser default
     @if $enable-rounded {
       -webkit-border-radius: $border-radius;
       -moz-border-radius: $border-radius;
       border-radius: $border-radius;
     } @else {
       border-radius: 0;
     }
   }
   
   //***** flex
   @mixin d-flex {
     display: -webkit-box;
     display: -webkit-flex;
     display: -ms-flexbox;
     display: -moz-box;
     display: flex;
   }
   @mixin d-grid {
     display: -webkit-box;
     display: -webkit-flex;
     display: -ms-flexbox;
     display: -moz-box;
     display: grid;
   }
   
   .d_flex {
     @include d-flex;
   }
   
   @mixin flex__custome($dir, $justify, $align) {
     @include d-flex;
     flex-direction: $dir;
     justify-content: $justify;
     align-items: $align;
   }
   @mixin flex-r-center {
     @include d-flex;
     justify-content: center;
     align-items: center;
   }
   
   .flex--r--c {
     @include flex-r-center;
   }
   
   @mixin flex-c-center {
     @include d-flex;
     flex-direction: column;
     justify-content: center;
     align-items: center;
   }
   
   //***** fixed navigation
   @mixin fixed__nav($height, $background, $transition) {
     position: sticky;
     @include box-shadow;
     width: 100%;
     z-index: 10;
     background-color: $background;
     height: $height;
     top: 0;
     overflow: visible;
     @include transition($transition);
   }
   
   //***** media query
   @mixin media-lg {
     @media only screen and (max-width: 1199.98px) {
       @content;
     }
   }
   
   @mixin media-md {
     @media only screen and (max-width: 991.98px) {
       @content;
     }
   }
   
   @mixin media-sm {
     @media only screen and (max-width: 767.98px) {
       @content;
     }
   }
   
   @mixin media-xs {
     @media only screen and (max-width: 575.98px) {
       @content;
     }
   }
   
   //***** animation
   // @include keyframes(slide-down) {
   //   0% { opacity: 1; }
   //   90% { opacity: 0; }
   // }
   // .element {
   //   width: 100px;
   //   height: 100px;
   //   background: black;
   //   @include animation('slide-down 5s 3');
   // }
   @mixin keyframes($animation-name) {
     @-webkit-keyframes #{$animation-name} {
       @content;
     }
     @-moz-keyframes #{$animation-name} {
       @content;
     }
     @-ms-keyframes #{$animation-name} {
       @content;
     }
     @-o-keyframes #{$animation-name} {
       @content;
     }
     @keyframes #{$animation-name} {
       @content;
     }
   }
   
   @mixin animation($str) {
     -webkit-animation: #{$str};
     -moz-animation: #{$str};
     -ms-animation: #{$str};
     -o-animation: #{$str};
     animation: #{$str};
   }
   
   //***** opacity
   @mixin opacity($opacity) {
     opacity: $opacity;
     $opacity-ie: $opacity * 100;
     filter: alpha(opacity=$opacity-ie); //IE8
   }
   
   //***** second language
   $direction: rtl !default;
   @function flip($latin, $arabic) {
     @return if($direction==rtl, #{$latin}, #{$arabic});
   }
   
   $left: flip(left, right);
   $right: flip(right, left);
   html[lang="en"] {
     $latin: true;
     $direction: ltr;
   }
   
   html[lang="fa"],
   html[lang="ar"] {
     $arabic: true;
     $direction: rtl;
   }
   
   @mixin placeholder {
     ::-webkit-input-placeholder {
       @content;
     }
     :-moz-placeholder {
       @content;
     }
     ::-moz-placeholder {
       @content;
     }
     :-ms-input-placeholder {
       @content;
     }
   }
   

   @mixin simpleSpace {

    // margin and padding values
    $spacings: (
            0,
            1rem,
            2rem,
            3rem,
            4rem,
            5rem,
    ) !default;
  
    // margin and padding shorthand prefixes
    $prefixes: (
            p  : padding,
            px : (padding-left, padding-right),
            py : (padding-top, padding-bottom),
  
            pt : padding-top,
            pr : padding-right,
            pb : padding-bottom,
            pl : padding-left,
  
            m  : margin,
            mx : (margin-left, margin-right),
            my : (margin-top, margin-bottom),
  
            mt : margin-top,
            mr : margin-right,
            mb : margin-bottom,
            ml : margin-left,
    ) !default;
  
    // Loop generating all spacing styles
    @each $attr-short, $attr-list in $prefixes {
      @each $space in $spacings {
        .#{$attr-short}-#{ index(($spacings), $space)-1 } {
          @each $attr in $attr-list {
            #{$attr}: #{$space} !important;
          }
        }
      }
    }
  }
  
  @include simpleSpace();

  .d-flex{
    @include d-flex;
  }